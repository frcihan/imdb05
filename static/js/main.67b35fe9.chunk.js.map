{"version":3,"sources":["components/SearchBox/SearchBox.style.js","components/SearchBox/index.js","components/Card/Card.style.js","components/Card/index.js","components/CardList/CardList.style.js","components/CardList/index.js","Movie.js","MovieDetails.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","StyledSearchButton","StyledSearchInput","input","p","isColored","css","StyledSearchBox","div","SearchBox","inputRef","useRef","setSearchKeyword","useContext","MovieContext","ref","onClick","current","value","StyledCardWrapper","StyledText","StyledMovieImage","img","Card","title","imgSrc","id","poster_path","history","useHistory","push","src","alt","StyledCardList","CardList","movieList","baseImageUrl","map","movie","index","createContext","Movie","useState","setMovieList","searchKeyword","useEffect","axios","get","params","api_key","page","query","then","res","data","results","catch","finally","className","Provider","MovieDetails","movieDetails","setMovieDetails","useParams","original_title","overview","Navbar","to","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b35fe9.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport const StyledButton = styled.button`\n    border-radius: 0.2rem;\n`;\n\nexport const StyledSearchButton = styled(StyledButton)`\n    cursor: pointer;\n`;\n\n\nexport const StyledSearchInput = styled.input`\n    color: black;\n    ${ p => p.isColored &&\n        css`\n           color: red;\n        `\n    }\n\n        border-radius: 0.3rem;\n        margin-right: 0.5rem;\n\n\n`;\n\nexport const StyledSearchBox = styled.div`\n    margin: 2rem;\n    \n/*     ${StyledSearchInput} {\n        color: gray;\n    } */\n`\n\n\n","import {useRef, useContext} from 'react';\nimport {MovieContext} from \"../../Movie\";\nimport {StyledSearchBox, StyledSearchInput, StyledSearchButton} from \"./SearchBox.style\";\n\nexport const SearchBox = () => {\n    const inputRef = useRef();\n    const {setSearchKeyword} = useContext(MovieContext);\n    return (\n        <StyledSearchBox>\n           <StyledSearchInput ref={inputRef} isColored={false}/>\n           <StyledSearchButton onClick={()=>setSearchKeyword(inputRef?.current?.value)}>Search</StyledSearchButton> \n        </StyledSearchBox>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const StyledCardWrapper = styled.div`\n    width: 9.375rem;\n    height: 12.5rem;\n    border: 0.0625rem solid rgba(0,0,0,0.2);\n    border-radius: 5px;\n    box-shadow: 0.1875rem 0.125rem 0.625rem rgba(0,0,0,0.1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    transition: 0.2s;\n\n    &:hover {\n        transform: scale(1.1);\n        box-shadow: 0.3rem 0.3rem 0.9rem rgba(0,0,0,0.1);\n    }\n`;\n\nexport const StyledText = styled.p`\n    color: red;\n    font-size: 0.5rem;\n    margin: 0;\n`;\n\nexport const StyledMovieImage = styled.img`\n    width: auto;\n    height: 85%;\n`","import { useHistory } from \"react-router-dom\";\nimport {StyledCardWrapper, StyledText, StyledMovieImage} from \"./Card.style\"\n\nexport const Card = ({title, imgSrc, id, poster_path}) => {\n    const history = useHistory();\n    return (\n        <StyledCardWrapper onClick={() => history.push(`/detail/${id}`)}>\n        {\n            poster_path ?\n            <StyledMovieImage src={imgSrc + poster_path} alt={\"Movie Poster\"} /> :\n            <StyledMovieImage src='https://via.placeholder.com/113x170.png?text=No+Image' alt={\"No Poster\"} />\n        }\n            <StyledText>{title}</StyledText>\n        </StyledCardWrapper>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const StyledCardList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n`\n","import {useContext} from 'react';\nimport {Card} from \"../Card\";\nimport {MovieContext} from \"../../Movie\";\nimport {StyledCardList} from \"./CardList.style\"\n\nexport const CardList = () => {\n  const {movieList, baseImageUrl} = useContext(MovieContext);\n    return (\n        <StyledCardList>\n           {movieList?.map(\n               (movie, index) => (\n               <Card \n                key={index} \n                title={movie.title}\n                id={movie.id}\n                imgSrc={baseImageUrl}\n                poster_path = {movie.poster_path}\n                />)\n            )}\n        </StyledCardList>\n    )\n}\n","import React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\";\n\nimport './App.css';\nimport {SearchBox} from \"./components/SearchBox\";\nimport {CardList} from \"./components/CardList\";\n\nconst apiKey = \"7fc8d00ab1302c6aa7da237d2810116e\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieContext  = createContext();\n\nfunction Movie() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState(\"Star Wars\")\n\n  useEffect(()=>{\n      axios.get(\n          baseUrl, {params: {\n          api_key: apiKey,\n          page: 1,\n          query: searchKeyword\n          }}\n      )\n      .then((res)=> setMovieList(res?.data?.results))\n      .catch()\n      .finally()\n  },[searchKeyword])\n\n  return (\n    <div className=\"App\">\n      <MovieContext.Provider value={{ movieList, baseImageUrl, setSearchKeyword }}>\n          <SearchBox />\n          <CardList />\n      </MovieContext.Provider>\n    </div>\n  );\n}\n\nexport default Movie;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { StyledMovieImage} from \"./components/Card/Card.style\"\n\nconst movieDetailBaseUrl = \"https://api.themoviedb.org/3/movie/\"\nconst apiKey = \"7fc8d00ab1302c6aa7da237d2810116e\"; //temporary\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\n\nexport default function MovieDetails() {\n    const [movieDetails, setMovieDetails] = useState()\n    const { id } = useParams();\n\n    useEffect(()=>{\n        axios.get(\n            movieDetailBaseUrl+id, {params: {\n            api_key: apiKey,\n            }}\n        )\n        .then(res=>setMovieDetails(res?.data))\n        .catch()\n        .finally()\n    },[id])\n\n    return (\n        <div>\n            <h1>{movieDetails?.original_title}</h1>\n            <StyledMovieImage src={baseImageUrl+movieDetails?.poster_path} alt={\"Movie Poster\"}/>\n            <p>{movieDetails?.overview}</p> \n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n    return (\n        <div>\n           <Link to=\"/\"> HOME </Link> \n        </div>\n    )\n}\n","import Movie from \"./Movie\"\nimport MovieDetails from \"./MovieDetails\"\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\"\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <Switch>\n                <Route path=\"/detail/:id\" component={MovieDetails} exact/>\n                <Route path=\"/\" component={Movie}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}